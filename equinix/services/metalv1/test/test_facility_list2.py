# coding: utf-8

"""
    Metal API

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.metalv1.models.facility_list2 import FacilityList2

class TestFacilityList2(unittest.TestCase):
    """FacilityList2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FacilityList2:
        """Test FacilityList2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FacilityList2`
        """
        model = FacilityList2()
        if include_optional:
            return FacilityList2(
                facilities = [
                    equinix.services.metalv1.models.facility.Facility(
                        address = equinix.services.metalv1.models.address.Address(
                            address2 = '', 
                            city = '', 
                            coordinates = equinix.services.metalv1.models.coordinates.Coordinates(
                                href = '', 
                                latitude = '', 
                                longitude = '', ), 
                            country = '', 
                            href = '', 
                            state = '', 
                            zip_code = '', ), 
                        code = '', 
                        features = ["baremetal","backend_transfer","global_ipv4"], 
                        href = '', 
                        id = '', 
                        ip_ranges = ["2604:1380::/36","147.75.192.0/21"], 
                        metro = null, 
                        name = '', )
                    ],
                href = ''
            )
        else:
            return FacilityList2(
        )
        """

    def testFacilityList2(self):
        """Test FacilityList2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
